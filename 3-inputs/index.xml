<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Inputs on ARCHIMED user documentation</title>
    <link>/3-inputs/</link>
    <description>Recent content in Inputs on ARCHIMED user documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Jun 2020 12:15:33 +0200</lastBuildDate>
    
	<atom:link href="/3-inputs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Organisation</title>
      <link>/3-inputs/1-organisation/</link>
      <pubDate>Tue, 09 Jun 2020 12:15:33 +0200</pubDate>
      
      <guid>/3-inputs/1-organisation/</guid>
      <description>Inputs organisation Several input files are mandatory for an ARCHIMED simulation: the general configuration file (config.yml), the meteorology data (meteo.csv), the models configuration (e.g. plant_coffee.yml), and the scene (e.g.Â .ops and .opf files). There is also an input file for the physical constants (const.yml) that is optional because ARCHIMED defines default values if not provided.
It is recommended to follow along with the example files provided in the previous page opened in your preferred editor.</description>
    </item>
    
    <item>
      <title>General configuration file</title>
      <link>/3-inputs/2-general_config/</link>
      <pubDate>Tue, 09 Jun 2020 12:15:33 +0200</pubDate>
      
      <guid>/3-inputs/2-general_config/</guid>
      <description>config.yaml This file lists the main configuration parameters for a simulation. It controls the simulation by pointing towards the files for the meteorology data (e.g. meteo.csv), the models configuration (e.g. plant_coffee.yml), and the scene (e.g. cafeier.ops).
Although entries in the configuration file are not ordered, the following example is organized in sections for clarity.
A full working example is available in the folder presented in the previous page (â€œconfig.</description>
    </item>
    
    <item>
      <title>Constant parameter file</title>
      <link>/3-inputs/3-constants/</link>
      <pubDate>Tue, 09 Jun 2020 12:15:33 +0200</pubDate>
      
      <guid>/3-inputs/3-constants/</guid>
      <description>const.yml This file lists all constants and their values used in ARCHIMED. The file is optional. The example file provided below lists the default values used in ARCHIMED (their values are also provided in this page for information).
  Attachments   const.yml  (1 ko)    You can safely ignore this page for the vast majority of use cases. You donâ€™t need to know or understand everything in this page, it is only provided for convenience in case the user has specific needs.</description>
    </item>
    
    <item>
      <title>Meteorology</title>
      <link>/3-inputs/6-meteo/</link>
      <pubDate>Tue, 09 Jun 2020 12:15:33 +0200</pubDate>
      
      <guid>/3-inputs/6-meteo/</guid>
      <description>meteo.csv The meteorology file is used to input variables related to the environment. It is a file prepared in the CSV format where each column is a variable, and each line is a time step. A time step is a given period of time, it can be a period of 1 minute or a period of 100 days (but see the section about that below).
File format The file is a CSV file (semicolon separated) enriched by optional parameters as comments in the header (and following the YAML format).</description>
    </item>
    
    <item>
      <title>Power users</title>
      <link>/3-inputs/7-power_users/</link>
      <pubDate>Tue, 09 Jun 2020 12:15:33 +0200</pubDate>
      
      <guid>/3-inputs/7-power_users/</guid>
      <description>  More information soon about YAML anchors, more complex examples, advanced parametersâ€¦
YAML anchors More information about using anchors in YAML files soon.
 Command line args More information about using the command line options from ARCHIMED soon.
 Advanced parameters More information about using the advanced parameters soon.
 </description>
    </item>
    
    <item>
      <title>Working with voxels</title>
      <link>/3-inputs/8-voxels/</link>
      <pubDate>Tue, 09 Jun 2020 12:15:33 +0200</pubDate>
      
      <guid>/3-inputs/8-voxels/</guid>
      <description>  More information soon about using voxel files.
ðŸ“¦ â”œâ”€â”€ ðŸ“œconfig_vox.yml # -&amp;gt; Same here, but for a voxel scene â”œâ”€â”€ ðŸ“œconst.yml # -&amp;gt; constants used in the model â”œâ”€â”€ ðŸ“œmeteo.csv # -&amp;gt; the meteorology file â”œâ”€â”€ ðŸ“‚model # -&amp;gt; all the models configuration files are listed in this folder â”‚Â â””â”€â”€ ðŸ“œturbid_medium.yml # An example config for a turbid medium (i.e. voxels) â””â”€â”€ ðŸ“œsoil.yml # An example soil file </description>
    </item>
    
  </channel>
</rss>