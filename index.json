[
{
	"uri": "/1-introduction/",
	"title": "Welcome",
	"tags": [],
	"description": "",
	"content": "  ARCHIMED-φ user documentation The ARCHIMED modeling platform uses 3D virtual stands as a support for numerical simulations of plants in their environment.\nARCHIMED-φ is part of the ARCHIMED modeling platform and is used to simulate the biophysical processes such as leaf irradiation, transpiration and temperature and ultimately carbon assimilation. By doing so, detailed information can be integrated from the individual leaf scale up to the individual plant scale, even within complex stands such as agroforestry systems. Simple numerical methods are used for solving multiple feedback between light, energy, water and CO2 transfers at leaf, plant and plot scales. Numerical calculations applied at different scales allow simple implementation of complex models involving intricate processes.\nThe documentation is paired with example files that you can download to follow through. It is best to follow the documentation with these files opened for best understanding.\n  "
},
{
	"uri": "/2-getting-started/",
	"title": "Getting started",
	"tags": [],
	"description": "",
	"content": "  Chapter 0 This chapter is all about making you first simulation. We believe running the model once before starting digging into the details is way more fun !\n "
},
{
	"uri": "/2-getting-started/1-example-data/",
	"title": "Download",
	"tags": [],
	"description": "",
	"content": "  Data To run an ARCHIMED-φ simulation, you’ll need a working example. Please download it from here:\n  Attachments   example_inputs.zip  (423 kb)    At the moment, don’t worry about the organization of the folder or the file contents. We’ll get into this very soon in the organization page.\n ARCHIMED-φ executable ARCHIMED-φ is programmed in Java. The main benefit is that a same .jar file can be executed in all platforms compatible with Java (i.e. Windows, Mac, Linux…). Please download the executable (e.g. archimed-phys.jar):\n  Attachments   archimed-phys.jar  (19782 kb)    Then, place it at the root of the example directory, i.e. next to the config.yml file.\nYou can place archimed-phys.jar wherever you please, but it is good practice to place the executable in the folder of each simulation project for enhanced reproducibility.\n  "
},
{
	"uri": "/2-getting-started/2-download_archimed/",
	"title": "Run ARCHIMED-φ",
	"tags": [],
	"description": "",
	"content": "  Run a simulation Open a terminal  For windows users: right click inside the folder while holding the shift key, and click on “open Powershell”. It will open a Powershell prompt in the right folder. Then you can execute the command given above;\n For Mac users, press command + spacebar from the folder;\n For Linux users, well, you know already.   Run ARCHIMED-φ Open a terminal as presented before and run the following command:\njava -jar archimed-phys.jar config.yml And that’s it ! You ran an ARCHIMED-φ simulation ! Note that it can take a minute to finish.\n Command details The java -jar archimed-phys.jar part of the command just tells Java to execute the archimed-phys.jar file. If your ARCHIMED-φ .jar file is named differently, please name it properly, e.g.:\njava -jar archimed_custom_name.jar config.yml The last argument (config.yml) is used by ARCHIMED-φ itself. It is the path to the configuration file for the simulation. If you’re executing ARCHIMED-φ from a folder and the simulation files are in another, you can use this argument as a relative or absolute path, e.g.:\njava -jar archimed-phys.jar C:/users/yourusername/test/config.yml The argument can also be quoted, e.g. \"./test/config.yml\" when there are spaces in the path.\n  "
},
{
	"uri": "/2-getting-started/3-visualize_output/",
	"title": "Visualization",
	"tags": [],
	"description": "",
	"content": "  Render the output After executing ARCHIMED-φ in the example folder, the simulation outputs are found at this path: ./output/simdir. There are several files here, and one is especially useful for visualizing the results in 3D: coffee.opf.\nTo render the results, please download XPlo from the AMAPStudio website. Then open XPlo, press ctrl+I, choose opf, and navigate to the location of coffee-1-step00002.opf and open it.\nXplo will open and 3D render the example coffee. Now you can color the coffee components by any output variable by clicking on: Geometry -\u0026gt; Colorizer.\n "
},
{
	"uri": "/2-getting-started/4-commandline_arguments/",
	"title": "Command line arguments",
	"tags": [],
	"description": "",
	"content": "  Command details We saw earlier that a simulation is started using the following command line:\njava -jar archimed-phys.jar config.yml The java -jar archimed-phys.jar part of the command just tells Java to execute the archimed.jar file, and the second one (config.yml) is an argument used to give the path to the configuration file to ARCHIMED-φ.\nBut more options are also available from ARCHIMED-φ.\nTo get all the options from ARCHIMED-φ, you can consult the help by running it without any argument:\njava -jar archimed-phys.jar It will return something as follow (depending on the version):\n[INFO ] 2020-06-16 16:59:53.747 [main] ArchimedMain - build time 2020-06-16T13:30:26+0200 [INFO ] 2020-06-16 16:59:53.749 [main] ArchimedMain - commit b7a83300256fc3cfc98b1f7088ae613600a61398 on branch wavebands [INFO ] 2020-06-16 16:59:53.749 [main] CommandLineOptions - parsing options usage: archimed \u0026lt;property file\u0026gt; [-d] [--exclude-objectid-output \u0026lt;arg\u0026gt;] [-h] [--meteo-substep-v1] [--meteo-sunpos-v1] [--no-area-ratio] [--no-meteo-overlap-check] [--no-reduced-pixtable] [--no-upperhit-pixtable] [-p] [--prop \u0026lt;arg\u0026gt;] [--scattering-end-method \u0026lt;arg\u0026gt;] Light interception and photosynthesis on 3D plant models -d,--debug debug mode --exclude-objectid-output \u0026lt;arg\u0026gt;exclude given object id from file outputs -h,--help print detailed help --meteo-substep-v1 meteo step subdivision method V1 --meteo-sunpos-v1 meteo step sun positioning method V1 --no-area-ratio disable area ratio correction --no-meteo-overlap-check disable meteo time steps overlapping checking --no-reduced-pixtable do not use \u0026#39;reduced\u0026#39; pixel table --no-upperhit-pixtable do not use \u0026#39;upper hit\u0026#39; pixel table -p,--parallel enable parallel computations --prop \u0026lt;arg\u0026gt; define/override configuration property, eg. --prop file=xxx --scattering-end-method \u0026lt;arg\u0026gt; scattering iteration ending method (0,1,2)``` You can run ARCHIMED-φ with any of these options enabled, but at the moment it is best not digging into much details about this. We will see those details later in the documentation for power users.\n "
},
{
	"uri": "/",
	"title": "ARCHIMED user documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]